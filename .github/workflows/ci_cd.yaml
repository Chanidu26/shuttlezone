name: CI/CD Pipeline

on:
  #push:
    branches:
      - main
  #pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create docker-compose .env
        run: |
          cat << EOF > .env
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          EOF

      - name: Build and Push Docker Images
        run: |
          docker compose build
          docker compose push

  deploy:
    name: Deploy to AWS EC2  # <-- FIXED: Indentation issue
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Create SSH Key File
        run: |
          echo "${{ secrets.EC2_KEY }}" > shuttlezone.pem
          chmod 600 shuttlezone.pem 

      - name: SSH into AWS EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i shuttlezone.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'

          docker stop shuttlezone-frontend-container || true
          docker rm shuttlezone-frontend-container || true
          docker stop shuttlezone-backend-container || true
          docker rm shuttlezone-backend-container || true

          docker pull ${{ secrets.DOCKER_USERNAME }}/shuttlezone-frontend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/shuttlezone-backend:latest

          cat << EOFF > frontend.env
          REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}
          REACT_APP_CLOUDINARY_CLOUD_NAME=${{ secrets.REACT_APP_CLOUDINARY_CLOUD_NAME }}
          REACT_APP_CLOUDINARY_UPLOAD_PRESET=${{ secrets.REACT_APP_CLOUDINARY_UPLOAD_PRESET }}
          EOFF

          cat << EOFF > backend.env
          MONGO_DB=${{ secrets.MONGO_DB }}
          JWT=${{ secrets.JWT }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          EOFF

          docker run -d --name shuttlezone-frontend-container \
            -p 3000:3000 \
            --env-file frontend.env \
            --restart always \
            ${{ secrets.DOCKER_USERNAME }}/shuttlezone-frontend:latest

          docker run -d --name shuttlezone-backend-container \
            -p 3030:3030 \
            --env-file backend.env \
            --restart always \
            ${{ secrets.DOCKER_USERNAME }}/shuttlezone-backend:latest

          EOF
